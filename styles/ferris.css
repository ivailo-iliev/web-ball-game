/* Ferris game styles */
.game.ferris {
  --color-period: 12s;
  --ground-height: 35vh;
  --sky-zenith:#4aa3ff;
  --sky-horizon:#cfe8ff;
  --grass-top: #baecb0;
  --grass-bottom: #368c4c;
  --ferris-size: 60vmin;
  --tent-size: 40vmin;
  --carousel-size: 60vmin;
  position: relative;
  background-image:
    url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><rect width="100%" height="100%" fill="none"/><text x="50%" y="60%" dominant-baseline="middle" text-anchor="middle" font-size="440">🎪</text></svg>'),
    url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><rect width="100%" height="100%" fill="none"/><text x="150" y="250" text-anchor="middle" dominant-baseline="middle" font-size="200">🎢</text><g transform="translate(350 250) scale(-1 1)"><text x="0" y="0" text-anchor="middle" dominant-baseline="middle" font-size="200">🎢</text></g></svg>'),
    linear-gradient(to top, rgba(255,255,255,.7), rgba(255,255,255,0)),
    linear-gradient(to top, var(--grass-bottom) 0%, var(--grass-top) 100%),
    url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="520" height="260"><rect width="100%" height="100%" fill="none"/><g font-size="120" opacity=".7"><text x="30" y="70">☁️</text><text x="330" y="90">☁️</text></g></svg>'),
    linear-gradient(to bottom, var(--sky-zenith) 0%, var(--sky-horizon) 65%);
  background-size:
    var(--tent-size) var(--tent-size),
    var(--carousel-size) var(--carousel-size),
    100% 16vh,
    100% var(--ground-height),
    520px 260px,
    100% 100%;
  background-position: 95% calc(100% - var(--ground-height) + var(--tent-size) + -27vmin), 0% calc(100% - var(--ground-height) + var(--carousel-size) + -28vmin), center calc(100% - var(--ground-height)), center bottom, center top, center center;
  background-repeat: no-repeat, no-repeat, no-repeat, no-repeat, repeat, no-repeat;
  animation: hueCycle var(--color-period) steps(120) infinite;
  contain: layout paint size style;
}

@keyframes hueCycle {
  to { --hue: 360deg; }
}

@property --hue {
  syntax: '<angle>';
  inherits: true;
  initial-value: 0deg;
}

.game.ferris .queue {
  --height: 80px;
  --slide: 420ms;
  --easing: cubic-bezier(.2,.8,.2,1);
  --step: var(--height);                 /* 1 cell = element height */
  --n: 0;                                /* JS only updates this counter */
  --m: 1;
  --offset: calc(-1 * var(--n) * var(--step));
  --offsetNext: calc(-1 * var(--m) * var(--step));
  position: absolute;
  bottom: 0;
  left: 50%;
  inline-size: 100%;
  block-size: var(--height);
  overflow: visible;
  isolation: isolate;
  --sprite: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='800' height='80' viewBox='0 0 800 80' style='font-size: 40px; dominant-baseline: middle; text-anchor: middle;'><text x='40' y='40'>😒</text><text x='120' y='40'>🙄</text><text x='200' y='40'>😑</text><text x='280' y='40'>😬</text><text x='360' y='40'>😤</text><text x='440' y='40'>😴</text><text x='520' y='40'>😕</text><text x='600' y='40'>😮</text><text x='680' y='40'>😫</text><text x='760' y='40'>🫠</text></svg>");
  background-image: var(--sprite);
  background-repeat: repeat-x;
  background-position: var(--offset) 50%;
  background-size: auto 100%;
  transition: background-position var(--slide) var(--easing);
  will-change: background-position;
}

.game.ferris .pop {
  animation: riderPop 1s ease-out forwards;
}

@keyframes riderPop {
  to { transform: translateX(var(--flyX)) rotate(360deg); }
}

@property --spin {
  syntax: '<angle>';
  inherits: true;
  initial-value: 0deg;
}
/* keyframes spin no longer used; --spin is driven by WAAPI */
/*@keyframes spin { to { --spin: 360deg; } }*/

/* Center the SVG in the viewport; screen center == wheel center */
.game.ferris svg {
  --period: 8s;
  --r: 190px;               /* cart radius */
  shape-rendering: optimizeSpeed;
  text-rendering: optimizeSpeed;
  contain: content;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 100vmin;
  height: 100vmin;
  pointer-events: none;
}

.game.ferris .hub {
  transform-origin: center;
  filter: hue-rotate(var(--hue)) saturate(1.15);
  will-change: filter;
  text-shadow: 0 0 6px rgba(255,255,255,.25), 0 0 22px rgba(255,255,200,.18);
}

.game.ferris .wheel{
  transform-box: fill-box;
  transform-origin: 50% 50%;
  transform: rotate(var(--spin)) translateZ(0);
  filter: hue-rotate(var(--hue)) saturate(1.15);
  will-change: transform, filter;
}

/* Keep carts upright while orbiting the hub via pure transforms */
.ferris-carts > use{
  transform-box: view-box;
  /* rotate around the SVG center */
  transform-origin: 256px 256px;
  transform:
    rotate(calc(var(--theta) + var(--spin)))
    translate(var(--r))
    rotate(calc(-1 * (var(--theta) + var(--spin))));
  will-change: transform;
  backface-visibility: hidden;
  pointer-events: none;
  text-anchor: middle;
  dominant-baseline: middle;
}

/* 8 evenly spaced carts */
.ferris-carts > use:nth-child(1){ --theta:   0deg; }
.ferris-carts > use:nth-child(2){ --theta:  45deg; }
.ferris-carts > use:nth-child(3){ --theta:  90deg; }
.ferris-carts > use:nth-child(4){ --theta: 135deg; }
.ferris-carts > use:nth-child(5){ --theta: 180deg; }
.ferris-carts > use:nth-child(6){ --theta: 225deg; }
.ferris-carts > use:nth-child(7){ --theta: 270deg; }
.ferris-carts > use:nth-child(8){ --theta: 315deg; }

/* Symbol path colors via CSS variables */
#cart .c1 { fill: var(--c1, #f47daa) }
#cart .c2 { fill: var(--c2, #ea4889) }

/* Per-instance colors */
.ferris-carts > use:nth-child(1){ --c1:#f47daa; --c2:#ea4889; }
.ferris-carts > use:nth-child(2){ --c1:#a47ecc; --c2:#7a56bf; }
.ferris-carts > use:nth-child(3){ --c1:#2584ff; --c2:#014fab; }
.ferris-carts > use:nth-child(4){ --c1:#69a5ad; --c2:#41727a; }
.ferris-carts > use:nth-child(5){ --c1:#02ad41; --c2:#2f7c31; }
.ferris-carts > use:nth-child(6){ --c1:#ffd61c; --c2:#ffa42d; }
.ferris-carts > use:nth-child(7){ --c1:#ff8e05; --c2:#ff4c1c; }
.ferris-carts > use:nth-child(8){ --c1:#fc2b26; --c2:#da0a26; }
